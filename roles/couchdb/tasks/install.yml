---

- name: Add couchdb Apt signing key
  apt_key:
    url:    "https://couchdb.apache.org/repo/bintray-pubkey.asc"
    state:  present

- name: Add apt repo for couchdb
  apt_repository:
    repo:     "deb https://apache.bintray.com/couchdb-deb {{ ansible_distribution_release }} main"
    state:    present
    filename: couchdb

- name: Install Couchdb package
  apt:
    name:   "couchdb={{ couchdb_version }}~{{ ansible_distribution_release }}"
    state:  present
    update_cache: yes
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Stop couchdb service before changing config
  systemd:
    name:     couchdb
    state:    stopped
    enabled:  True

- name: Put the local.ini file on couchdb server
  template:
    src:    local.ini.j2
    dest:   "{{ couchdb_config_folder }}/local.d/custom.ini"
    owner:  "{{ couchdb_user }}"
    group:  "{{ couchdb_group }}"
    mode:   0755

- name: Put the vm.args file on couchdb server
  template:
    src:    vm.args.j2
    dest:   "{{ couchdb_config_folder }}/vm.args"
    owner:  "{{ couchdb_user }}"
    group:  "{{ couchdb_group }}"
    mode:   0755

- name: Start couchdb service and ensure it's running
  systemd:
    name:     couchdb
    state:    started
    enabled:  True

- name: delete existing system dbs
  uri:
    url:              "http://localhost:5984/{{ item }}"
    method:           DELETE
    headers:
      Content-Type:   "application/json"
    user:             admin
    password:         "{{ admin_password }}"
    force_basic_auth: yes
    status_code:      200,404
  ignore_errors:      true
  with_items:
    - "_global_changes"
    - "_replicator"
    - "_users"

- name: stop couchdb service before changing config
  systemd:
    name:     couchdb
    state:    stopped
    enabled:  True

- name: Change erlang node name
  lineinfile:
    path:     "{{ couchdb_config_folder }}/vm.args"
    regexp:   '^\-name couchdb@127.0.0.1'
    line:     "-name couchdb@{{ inventory_hostname }}"
    owner:    "{{ couchdb_user }}"
    group:    "{{ couchdb_group }}"
    mode:     0755

- name: Start couchdb service and ensure it's running
  systemd:
    name:     couchdb
    state:    started
    enabled:  True

- name: Create system dbs
  uri:
    url:              "http://localhost:5984/{{ item }}"
    method:           PUT
    headers:
      Content-Type:   "application/json"
    user:             admin
    password:         "{{ admin_password }}"
    force_basic_auth: yes
    status_code:      201,412,500
    timeout:          10
  ignore_errors:      true
  with_items:
    - "_global_changes"
    - "_replicator"
    - "_users"
    - "test"

- name:    Configure couchdb cluster
  include: couchdb_cluster_setup.yml
  when:    (cluster_setup == True)  and ( hosts_count | int > 1 )
